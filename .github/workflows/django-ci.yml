name: Django CI steps

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Setup Python 3.8
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      # Install all required dependencies
      - name: Install dependencies
        run: pip install -r dublinbus/requirements.txt
      # --check returns 0 if there's no modifications needed or 1 if there's linting issues
      - name: Run black --check .
        run: black --check .

      # Following https://github.com/marketplace/actions/setup-mysql to set up a MySQL database in docker for github actions to run our CI properly  
      # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop
      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '5.6.50' # the version of the MySQL local and production instances
          mysql database: 'dublin_bus'
          mysql root password: ''
          mysql user: ${{ secrets.DEVELOPMENT_DATABASE_USER }} # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.DEVELOPMENT_DATABASE_PASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"
      
      # Execute all Django tests
      - name: Run Django tests
        run: cd dublinbus && python manage.py test
        env:
          GOOGLEMAPS_APIKEY: ${{ secrets.GOOGLEMAPS_APIKEY }}
          DEVELOPMENT_DATABASE_USER: ${{ secrets.DEVELOPMENT_DATABASE_USER }}
          DEVELOPMENT_DATABASE_PASSWORD: ${{ secrets.DEVELOPMENT_DATABASE_PASSWORD }}
          DEVELOPMENT_DATABASE_HOST: ${{ secrets.DEVELOPMENT_DATABASE_HOST }}
          DEVELOPMENT_DATABASE_PORT: ${{ secrets.DEVELOPMENT_DATABASE_PORT }}
